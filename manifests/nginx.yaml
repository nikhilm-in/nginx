apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    service: nginx
    version: v19
spec:
  selector:
    matchLabels:
      service: nginx
  template:
    metadata:
      labels:
        service: nginx
        version: v19
    spec:
      containers:
      - name: nginx
        image: nikhilmin/nginx:blue
        ports:
        - name: containerport
          containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        # livenessProbe:
        #   httpGet:
        #     path: /
        #     port: containerport
        #   failureThreshold: 1
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /
        #     port: containerport
        #   successThreshold: 2
        #   periodSeconds: 15
        # startupProbe:
        #   httpGet:
        #     path: /
        #     port: containerport
        #   failureThreshold: 30
        #   periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    # nodePort: 30082
  selector:
    service: nginx
    version: v19
# ---
# kind: HorizontalPodAutoscaler
# apiVersion: autoscaling/v1
# metadata:
#   name: nginx
# spec:
#   scaleTargetRef:
#     kind: Deployment
#     name: nginx
#     apiVersion: apps/v1
#   minReplicas: 1
#   maxReplicas: 5
#   targetCPUUtilizationPercentage: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-nginx
#   annotations:
#     # use the shared ingress-nginx
#     kubernetes.io/ingress.class: "nginx"
# spec:
#   rules:
#   - host: localhost
#     http:
#       paths:
#       - path: /health
#         pathType: Prefix
#         backend:
#           service:
#             name: nginx
#             port:
#               number: 80
